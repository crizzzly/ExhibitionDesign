#:import win kivy.core.window.Window
#:import clock kivy.clock.Clock

<More_Button>:
    source: 'images/button-mehr.png'
    # size: self.texture_size

<CircleButton>:
    id: circles
    radius: 150
    size: 300, 300
    color: root.color
    on_size: self.canvas.ask_update()
    make_bigger: root.make_bigger
    name: root.name
    title: root.title
    # target: root.target
    canvas:
        Color:
            rgb: self.color
            # 0.502, 0.2588, 0.9569
        Ellipse:
            pos:  self.pos[0], self.pos[1]  #
            size:  self.radius*2, self.radius*2
    Label:
        id: circle_title
        text: circles.title
        font_size: '18sp' # 24 = bigger
        size: self.texture_size
        center_x:
            20 + self.width/2 if (circles.x < 0) else   win.width - 20 - self.width/2
        y:
            20 if (circles.y < 0) else  win.height- 40



        # pos:
    # Popup:
    #     id: popup
    #     title: 'test'
        # size_hint: 0.5, .5

<Menu>:
    CircleButton:
        id: bottom_right
        name: "br"
        title: "Gesichts-\nerkennung"
        color: 0.2392, 1., 1.
        center: win.width, 0
        on_press: self.color=[0.4, .4, .4]
        on_release:
            self.color=[0.2392, 1., 1.]
            # if self.make_bigger: pass
            # else: app.manager.current = 'hogScreen'
            print("changing to edgeScreen")
            self.toggle_button_behavior()
    CircleButton:
        id: bottom_left
        name: "bl"
        title: "Camera"
        center: 0, 0
        color: 0.502, 0.2588, 0.9569
        on_press: self.color = [0.4, 0.4, 0.4]
        on_release:
            self.color=[0.502, 0.2588, 0.9569]
            # if self.make_bigger: pass
            # else: app.manager.current = "camScreen"
            self.toggle_button_behavior()
    CircleButton:
        id: top_left
        name: "tl"
        title: "Bildvorbereitung"
        center: 0, win.height
        color: 0.2588, 0.502, 0.9569
        on_press:
            self.color = [0.4, 0.4, 0.4]
            print("clicked preprocScreen")
        on_release:
            self.color=[0.2588, 0.502, 0.9569]
            # if self.make_bigger: pass
            # else: app.manager.current = 'preprocScreen'
            self.toggle_button_behavior()
    CircleButton:
        id: top_right
        name: "tr"
        title: "Kantenerkennung"
        color: 0.2588, 0.3725, 0.9569
        center:  win.width, win.height
        on_press: self.color = [0.4, 0.4, 0.4]
        on_release:
            self.color=[ 0.2588, 0.3725, 0.9569]
            # if self.make_bigger: pass
            # else: app.manager.current = 'edgeScreen'
            self.toggle_button_behavior()
            print("changing to preprocScreen")


<CamScreen>:
    # name: 'camScreen
    cam: cam
    CameraScreen:
        id: cam
    Menu:
        id: menu
# <PreprocScreen>:
#     FloatLayout:
#         size_hint: None, None
#         preproc: preproc
#         # name: 'preprocScreen'
#         Preproc_Anim:
#             size_hint:None, None
#             id: preproc
#             index: 2
#
#         Button:
#             size_hint: None, None
#             center: win.width/2, win.height/4
#             size: 100, 50
#             text: "open popup"
#             on_press: app.manager.preproc_popup()
#         Menu:
#             size_hint: None, None
#             index:0
    # ModalView:
    #     id: modal
    #     size_hint: .5, .5
    #     canvas:
    #         Color:
    #             rgb: 1, 1, 1, .9
    #         Ellipse:
    #             pos: self.pos
    #             size: self.size
<EdgedetScreen>:
    edgedet: edgedet
    # name: 'edgedetScreen'
    EdgeDetect:
        id: edgedet
    Menu:
<HogScreen>:
    hog: hog
    Hog_Detect:
        id: hog
    Menu:
