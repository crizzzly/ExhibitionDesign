#:import win kivy.core.window.Window
#:import clock kivy.clock.Clock

<More_Button>:
    source: 'images/button-mehr.png'
    # size: self.texture_size

<CircleButton>:
    id: circles
    radius: 150
    size: 300, 300
    color: root.color
    on_size: self.canvas.ask_update()
    make_bigger: root.make_bigger
    name: root.name
    title: root.title
    # target: root.target
    canvas:
        Color:
            rgb: self.color
            # 0.502, 0.2588, 0.9569
        Ellipse:
            pos:  self.pos[0], self.pos[1]  #
            size:  self.radius*2, self.radius*2
    Label:
        id: circle_title
        text: circles.title
        font_size: '18sp' # 24 = bigger
        size: self.texture_size
        center_x:
            20 + self.width/2 if (circles.x < 0) else   win.width - 30 - self.width/2
        center_y:
            40 if (circles.y < 0) else  win.height- 60



        # pos:
    # Popup:
    #     id: popup
    #     title: 'test'
        # size_hint: 0.5, .5

<Menu>:
    CircleButton:
        id: bottom_right
        name: "br"
        title: "Gesichts-\nerkennung"
        color: 0.2392, 1., 1.
        center: win.width-25, 0
        on_press: self.color=[0.4, .4, .4]
        on_release:
            self.color=[0.2392, 1., 1.]
            # if self.make_bigger: pass
            # else: app.manager.current = 'hogScreen'
            print("changing to edgeScreen")
            self.toggle_button_behavior()
    CircleButton:
        id: bottom_left
        name: "bl"
        title: "Camera"
        center: 25, 0
        color: 0.502, 0.2588, 0.9569
        on_press: self.color = [0.4, 0.4, 0.4]
        on_release:
            self.color=[0.502, 0.2588, 0.9569]
            # if self.make_bigger: pass
            # else: app.manager.current = "camScreen"
            self.toggle_button_behavior()
    CircleButton:
        id: top_left
        name: "tl"
        title: "Bild-\nvorbereitung"
        center: 25, win.height
        color: 0.2588, 0.502, 0.9569
        on_press:
            self.color = [0.4, 0.4, 0.4]
            print("clicked preprocScreen")
        on_release:
            self.color=[0.2588, 0.502, 0.9569]
            # if self.make_bigger: pass
            # else: app.manager.current = 'preprocScreen'
            self.toggle_button_behavior()
    CircleButton:
        id: top_right
        name: "tr"
        title: "Kanten-\nerkennung"
        color: 0.2588, 0.3725, 0.9569
        center:  win.width-25, win.height
        on_press: self.color = [0.4, 0.4, 0.4]
        on_release:
            self.color=[ 0.2588, 0.3725, 0.9569]
            # if self.make_bigger: pass
            # else: app.manager.current = 'edgeScreen'
            self.toggle_button_behavior()
            print("changing to preprocScreen")


<CamScreen>:
    # name: 'camScreen
    cam: cam
    CameraScreen:
        id: cam
        active_funcion: self.active_function
        on_active_function:
            print("activ func change")
            if self.active_function == 'preproc': menu.ids.top_left.pulse()
            elif self.active_function == 'edge': menu.ids.top_right.pulse()
            elif self.active_function == 'hog': menu.ids.bottom_right.pulse()
            else : menu.ids.bottom_left.pulse()
    Menu:
        id: menu
<PreprocScreen>:
    FloatLayout:
        size_hint: None, None
        preproc: preproc
        # name: 'preprocScreen'
        Preproc_Anim:
            size_hint:None, None
            id: preproc
            index: 2

        Button:
            size_hint: None, None
            center: win.width/2, win.height/4
            size: 100, 50
            text: "open popup"
            on_press: app.manager.preproc_popup()
        Menu:
            size_hint: None, None
            index:0

<EdgedetScreen>:
    edgedet: edgedet
    # name: 'edgedetScreen'
    EdgeDetect:
        id: edgedet
    Menu:
<HogScreen>:
    hog: hog
    Hog_Detect:
        id: hog
    Menu:
